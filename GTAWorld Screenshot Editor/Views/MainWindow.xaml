<mah:MetroWindow x:Class="GTAWorld_Screenshot_Editor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GTAWorld_Screenshot_Editor"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconpacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:qc="http://QuickConverter.CodePlex.com/"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
        mc:Ignorable="d" Loaded="MainWindow_OnLoaded"
        Title="GTAWorld Screenshot Editor" Height="720" Width="1280"
        Icon="../Resources/screenshot.ico"
        Drop="MainWindow_OnDrop" AllowDrop="True"
        Closed="MainWindow_OnClosed">
    <mah:MetroWindow.DataContext>
        <local:MainViewModel/>
    </mah:MetroWindow.DataContext>

    <Grid>
        <Image Source="../Resources/Logo.png"
               Height="{Binding ElementName=EditorHeader, Path=ActualHeight}"
               VerticalAlignment="Top" HorizontalAlignment="Right"
               Margin="2.5"/>

        <TabControl x:Name="MainTabControl">
            <TabItem x:Name="EditorHeader" Header="Editor">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="512"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <GroupBox Grid.Column="0"
                              IsEnabled="{qc:Binding '!$P', P={Binding ElementName=CropImageToggle, Path=IsChecked}}">
                        <GroupBox.Header>
                            <Label Foreground="White">
                                CONTROLS
                            </Label>
                        </GroupBox.Header>

                        <GroupBox.Content>
                            <Grid FlowDirection="LeftToRight">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Expander x:Name="InstructionsExpander" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                                              Expanded="ChatFilterExpander_OnExpanded" Collapsed="ChatFilterExpander_OnExpanded"
                                              Margin="0 0 0 10">
                                    <Expander.Header>
                                        <Label Foreground="White">
                                            USEAGE INSTRUCTIONS (CLICK HERE!)
                                        </Label>
                                    </Expander.Header>

                                    <StackPanel>

                                        <StackPanel.Resources>
                                            <Style TargetType="{x:Type TextBlock}"
                                                       BasedOn="{StaticResource MahApps.Styles.TextBlock}">
                                                <Setter Property="FontFamily" Value="Arial" />
                                                <Setter Property="FontSize" Value="15" />
                                                <Setter Property="Foreground"
                                                            Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                <Setter Property="Margin" Value="10 0 0 0"/>
                                                <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                                            </Style>

                                            <Style TargetType="{x:Type BulletDecorator}">
                                                <Setter Property="Margin" Value="0 0 0 10"/>
                                            </Style>
                                        </StackPanel.Resources>

                                        <BulletDecorator>
                                            <BulletDecorator.Bullet>
                                                <Ellipse Height="10" Width="10" Fill="{DynamicResource MahApps.Brushes.Accent}"/>
                                            </BulletDecorator.Bullet>

                                            <TextBlock Text="To move parsed chat text over image, hold Shift and move your mouse over the image until you are satisfied with location, release Shift after."/>
                                        </BulletDecorator>

                                        <BulletDecorator>
                                            <BulletDecorator.Bullet>
                                                <Ellipse Height="10" Width="10" Fill="{DynamicResource MahApps.Brushes.Accent}"/>
                                            </BulletDecorator.Bullet>

                                            <TextBlock Text="You can drag and drop a screenshot you want to edit, drop location does not matter as long as its anywhere on the app."/>
                                        </BulletDecorator>

                                        <BulletDecorator>
                                            <BulletDecorator.Bullet>
                                                <Ellipse Height="10" Width="10" Fill="{DynamicResource MahApps.Brushes.Accent}"/>
                                            </BulletDecorator.Bullet>

                                            <TextBlock>
                                                    Custom line color: (#hex_color_code)line_text<LineBreak/>
                                                    Example: (#fff000)John Smith says: Blah.
                                            </TextBlock>
                                        </BulletDecorator>

                                        <BulletDecorator>
                                            <BulletDecorator.Bullet>
                                                <Ellipse Height="10" Width="10" Fill="{DynamicResource MahApps.Brushes.Accent}"/>
                                            </BulletDecorator.Bullet>

                                            <TextBlock>
                                                    If you lack chat log, you can drag and drop image that has chat visible, click "READ IMAGE OCR", it will read visible chat off it.<LineBreak/>
                                                    Make sure to proof read text!<LineBreak/>
                                                    After that drag and drop image you want to use that has no chat visible.
                                            </TextBlock>
                                        </BulletDecorator>
                                    </StackPanel>
                                </Expander>

                                <Label Grid.Column="0" Grid.Row="1" Content="RageMP Folder"/>
                                <Label Grid.Column="0" Grid.Row="2" Content="Selected Image"/>
                                <Label Grid.Column="0" Grid.Row="3" Content="Image Resolution"/>
                                <Label Grid.Column="0" Grid.Row="4" Content="Image Width" Visibility="{qc:Binding '$P ? Visibility.Visible : Visibility.Collapsed', P={Binding SelectedResolution.AllowEdit}}"/>
                                <Label Grid.Column="0" Grid.Row="5" Content="Image Height" Visibility="{qc:Binding '$P ? Visibility.Visible : Visibility.Collapsed', P={Binding SelectedResolution.AllowEdit}}"/>
                                <Label Grid.Column="0" Grid.Row="6" Content="Text Box Width"/>
                                <Label Grid.Column="0" Grid.Row="7" Content="Number of Last Lines to Parse"/>
                                <Label Grid.Column="0" Grid.Row="9" Content="Pased Text:"/>

                                <Grid Grid.Column="1" Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBox Grid.Column="0" Text="{Binding RageFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <Button Grid.Column="1" Margin="0" Width="32" Command="{Binding RageMPFolderCommand}">
                                        <Button.Content>
                                            <iconpacks:PackIconBoxIcons Kind="RegularFolder" VerticalContentAlignment="Center"/>
                                        </Button.Content>
                                    </Button>
                                </Grid>

                                <Grid Grid.Column="1" Grid.Row="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBox Grid.Column="0" Text="{Binding SelectedImage.Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <Button Grid.Column="1" Margin="0" Width="32" Command="{Binding SelectImageCommand}">
                                        <Button.Content>
                                            <iconpacks:PackIconBoxIcons Kind="RegularImage" VerticalAlignment="Center"/>
                                        </Button.Content>
                                    </Button>
                                </Grid>

                                <ComboBox Grid.Column="1" Grid.Row="3" ItemsSource="{Binding Resolutions}" DisplayMemberPath="Name"
                                          SelectedItem="{Binding SelectedResolution, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding ResizeImageCommandCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>

                                <mah:NumericUpDown x:Name="ImageWidth" Grid.Column="1" Grid.Row="4"
                                                   IsEnabled="{Binding SelectedResolution.AllowEdit}"
                                                   Value="{Binding SelectedResolution.Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   Visibility="{qc:Binding '$P ? Visibility.Visible : Visibility.Collapsed', P={Binding SelectedResolution.AllowEdit}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="ValueChanged">
                                            <i:InvokeCommandAction Command="{Binding ResizeImageCommandCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </mah:NumericUpDown>

                                <mah:NumericUpDown x:Name="ImageHeight" Grid.Column="1" Grid.Row="5"
                                                   IsEnabled="{Binding SelectedResolution.AllowEdit}"
                                                   Value="{Binding SelectedResolution.Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   Visibility="{qc:Binding '$P ? Visibility.Visible : Visibility.Collapsed', P={Binding SelectedResolution.AllowEdit}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="ValueChanged">
                                            <i:InvokeCommandAction Command="{Binding ResizeImageCommandCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </mah:NumericUpDown>

                                <mah:NumericUpDown Grid.Column="1" Grid.Row="6"
                                                   Value="{Binding TextSettings.Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                </mah:NumericUpDown>

                                <Grid Grid.Column="1" Grid.Row="7" Margin="0 10 0 10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Slider Minimum="100" Maximum="1000" Interval="100"
                                                Value="{Binding TextSettings.ParseLines, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <Label Grid.Column="1" Content="{Binding TextSettings.ParseLines, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>

                                <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="8">
                                    <xctk:DropDownButton Content="CHAT FILTERS"
                                                         MaxDropDownHeight="384">
                                        <xctk:DropDownButton.DropDownContent>
                                            <Grid Margin="2.5">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>

                                                <TextBlock Grid.Row="0" TextAlignment="Center" Text="WHAT YOU SELECT, WILL NOT BE REMOVED!" Margin="0 10 0 10"/>

                                                <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="1"
                                                          HorizontalScrollBarVisibility="Disabled">
                                                    <ItemsControl ItemsSource="{Binding ParserSettings, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                              MaxWidth="512">

                                                        <ItemsControl.Resources>
                                                            <Style TargetType="{x:Type mah:ToggleSwitch}">
                                                                <Setter Property="FontFamily" Value="Arial" />
                                                                <Setter Property="FontSize" Value="15" />
                                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                <Setter Property="Foreground"
                                                                Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                            </Style>
                                                        </ItemsControl.Resources>

                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <WrapPanel IsItemsHost="True" Orientation="Horizontal" />
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>

                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <mah:ToggleSwitch Content="{Binding Name}"
                                                                          IsOn="{Binding Selected}"
                                                                          Margin="10 0 0 0">
                                                                </mah:ToggleSwitch>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                </ScrollViewer>
                                            </Grid>
                                        </xctk:DropDownButton.DropDownContent>
                                    </xctk:DropDownButton>

                                    <Button Content="Parse Chat from ragemp" Command="{Binding ParseChatCommand}"
                                            IsEnabled="{qc:Binding '$P != 0', P={Binding RageFolder.Length}}"/>

                                    <Button Command="{Binding CopyChatToClipboardCommand}" Content="Copy Chat to Clipboard"
                                            IsEnabled="{qc:Binding '$P > 0', P={Binding SelectedBlock.ParsedChat.Length}}"/>

                                    <Button Content="Add Parsed Chat to Image" Command="{Binding AddTextToImageCommand}"
                                            IsEnabled="{qc:Binding '$P > 0', P={Binding SelectedBlock.ParsedChat.Length}}"/>

                                    <Button Content="Add Typed Text /w Filteration to Image" Command="{Binding AddManuallyTypedToImageCommand}"
                                            IsEnabled="{qc:Binding '$P > 0', P={Binding SelectedBlock.ParsedChat.Length}}"/>

                                    <Button Content="Clear Image Text" Command="{Binding ClearImageTextCommand}"/>
                                </StackPanel>

                                <Grid Grid.Column="1" Grid.Row="9">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <xctk:ColorPicker x:Name="HexColor" Grid.Column="0"  ColorMode="ColorCanvas" Foreground="{DynamicResource MahApps.Brushes.Accent}" Background="#252525"
                                                           DropDownBackground="#252525" ShowStandardColors="False" ShowTabHeaders="False" ButtonStyle="{StaticResource ColorPickerButton}"
                                                           SelectedColor="White" Margin="0 0 5 0" UsingAlphaChannel="False"/>

                                    <Button Grid.Column="1" Height="Auto" Command="{Binding CopyColorCodeCommand}" CommandParameter="{Binding ElementName=HexColor, Path=SelectedColor}">
                                        <Button.Content>
                                            <DockPanel>
                                                <iconpacks:PackIconBoxIcons Kind="SolidColorFill" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                                                <Label Content="Copy Color" DockPanel.Dock="Right"/>
                                            </DockPanel>
                                        </Button.Content>
                                    </Button>
                                </Grid>

                                <Grid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox Grid.Column="0" ItemsSource="{Binding TextBlocks}" DisplayMemberPath="BlockName" FontSize="15"
                                              SelectedItem="{Binding SelectedBlock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="1"/>

                                    <Button Grid.Column="1" Content="{iconpacks:BoxIcons Kind=RegularAddToQueue}"
                                            Command="{Binding BlockCommand}" CommandParameter="add" 
                                            ToolTip="Add Text Block"/>
                                    <Button Grid.Column="2" Content="{iconpacks:FeatherIcons Kind=Delete}"
                                            Command="{Binding BlockCommand}" CommandParameter="remove"
                                            ToolTip="Remove Selected Text Block"/>
                                </Grid>

                                <xctk:DropDownButton Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="11"
                                                     Content="NAMES TO HIDE">
                                    <xctk:DropDownButton.DropDownContent>
                                        <Grid Width="512" Margin="10">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="600"/>
                                            </Grid.RowDefinitions>

                                            <Grid Grid.Row="0" Margin="0 0 0 10">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <TextBox Grid.Column="0" VerticalContentAlignment="Center"
                                                         Text="{Binding NameToReplace.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                                <Button x:Name="AddNameToRemove" Grid.Column="1" Content="{iconpacks:BoxIcons Kind=RegularAddToQueue}"
                                                        Command="{Binding ReplaceNameCommand}" CommandParameter="add" 
                                                        ToolTip="Add Name"/>

                                                <Button Grid.Column="2" Content="{iconpacks:FeatherIcons Kind=Delete}"
                                                        Command="{Binding ReplaceNameCommand}" CommandParameter="remove"
                                                        ToolTip="Remove Name"/>
                                            </Grid>

                                            <ListView x:Name="NamesToRemoveList" Grid.Row="1" ItemsSource="{Binding NamesToReplace}"
                                                      SelectedItem="{Binding NameToReplace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      DisplayMemberPath="Name"/>
                                        </Grid>
                                    </xctk:DropDownButton.DropDownContent>
                                </xctk:DropDownButton>

                                <xctk:RichTextBox x:Name="ParsedChatSmall" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="12"
                                                      FontSize="15"
                                                      Text="{Binding SelectedBlock.ParsedChat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                                                      Block.LineHeight="{Binding LineHeight, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                    <xctk:RichTextBox.TextFormatter>
                                        <xctk:PlainTextFormatter/>
                                    </xctk:RichTextBox.TextFormatter>
                                </xctk:RichTextBox>
                            </Grid>
                        </GroupBox.Content>
                    </GroupBox>

                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0" Margin="0 0 0 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" FontSize="20" FontWeight="Bold" Content="{Binding ElementName=CanvasZoom, Path=Value}" ContentStringFormat="Canvas Zoom: {0:#0}%"/>

                            <Slider x:Name="CanvasZoom" Grid.Column="1" Minimum="10" Maximum="100" Interval="10" Margin="10 0 10 0"
                                    ValueChanged="CanvasZoom_OnValueChanged" Value="{Binding TextSettings.CanvasScale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <ToggleButton x:Name="CropImageToggle" Grid.Column="2"
                                          CommandParameter="{Binding ElementName=CropImageToggle, Path=IsChecked}"
                                          Command="{Binding CropImageCommand}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MahApps.Styles.ToggleButton}">
                                        <Setter Property="MinHeight" Value="32"/>
                                        <Setter Property="FontFamily" Value="Arial"/>
                                        <Setter Property="FontSize" Value="20"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="Margin" Value="2.5"/>
                                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Content" Value="SAVE CROP"/>
                                            </Trigger>

                                            <Trigger Property="IsChecked" Value="False">
                                                <Setter Property="Content" Value="CROP IMAGE"/>
                                            </Trigger>

                                            <DataTrigger Binding="{qc:Binding '$P > 0', P={Binding SelectedImage.Path.Length}}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>

                                            <DataTrigger Binding="{qc:Binding '$P > 0', P={Binding TextBlocks.Count}}" Value="True">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </Grid>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" x:Name="SaveLocally" Content="Save Locally" Click="SaveLocally_OnClick" FontSize="20"
                                    IsEnabled="{qc:Binding '$P > 0', P={Binding TextBlocks.Count}}"
                                    Command="{Binding SaveCacheCommand}"/>

                            <Button x:Name="CopyClipboard" Grid.Column="1" Content="Copy to Clipboard" Click="SaveLocally_OnClick" FontSize="20"
                                    IsEnabled="{qc:Binding '$P > 0', P={Binding TextBlocks.Count}}"
                                    Command="{Binding SaveCacheCommand}"/>

                            <Button Grid.Column="2" Content="READ IMAGE OCR" Command="{Binding ReadOcrCommand}" FontSize="20"
                                    IsEnabled="{qc:Binding '$P > 0', P={Binding SelectedImage.Path.Length}}"/>

                            <Button Grid.Column="3" Content="RESET FIELDS" Command="{Binding ResetCommand}" FontSize="20"/>
                        </Grid>

                        <Canvas x:Name="ScreenshotCanvas" Grid.Row="2"
                                MouseMove="ScreenshotCanvas_OnMouseMove"
                                HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10 0 0 0"
                                Height="{Binding SelectedResolution.Height}"
                                Width="{Binding SelectedResolution.Width}">

                            <Image x:Name="ScreenshotImage" Source="{Binding SelectedImage.Bitmap, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   Height="{Binding SelectedResolution.Height}"
                                   Width="{Binding SelectedResolution.Width}"/>

                            <ItemsControl x:Name="ScreenshotTextControl" ItemsSource="{Binding TextBlocks}"
                                          Height="{Binding SelectedResolution.Height}"
                                          Width="{Binding SelectedResolution.Width}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas IsItemsHost="True"
                                                Height="{Binding SelectedResolution.Height}"
                                                Width="{Binding SelectedResolution.Width}"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>

                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ItemsControl ItemsSource="{Binding Texts}"
                                                      Margin="{Binding Margin}"
                                                      Width="{Binding DataContext.TextSettings.Width, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                      Height="{Binding DataContext.SelectedResolution.Height, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel IsItemsHost="True"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>

                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <local:OutlinedTextBlock Text="{Binding String}"
                                                                             FontSize="{Binding FontSize}"
                                                                             FontFamily="{Binding FontFamily}"
                                                                             FontWeight="{Binding FontWeight}"
                                                                             TextWrapping="{Binding TextWrapping}"
                                                                             Fill="{Binding Foreground}"
                                                                             Effect="{Binding Effect}"
                                                                             StrokeThickness="{Binding StrokeThickness}"
                                                                             Stroke="{Binding Stroke}" />
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <!--<Button x:Name="TestButton" Content="Test Button"/>--> 
                        </Canvas>
                    </Grid>

                    
                </Grid>
            </TabItem>

            <TabItem Header="Parsed Chat">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <ScrollViewer HorizontalScrollBarVisibility="Auto" Grid.Row="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ComboBox Grid.Column="0" ItemsSource="{Binding TextBlocks}" DisplayMemberPath="BlockName" FontSize="15"
                                      SelectedItem="{Binding SelectedBlock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="1"/>

                                <Button Grid.Column="1" Content="{iconpacks:BoxIcons Kind=RegularAddToQueue}"
                                    Command="{Binding BlockCommand}" CommandParameter="add" 
                                    ToolTip="Add Text Block"/>
                                <Button Grid.Column="2" Content="{iconpacks:FeatherIcons Kind=Delete}"
                                    Command="{Binding BlockCommand}" CommandParameter="remove"
                                    ToolTip="Remove Selected Text Block"/>
                            </Grid>

                            <xctk:ColorPicker x:Name="HexColor2" Grid.Column="1"  ColorMode="ColorCanvas" Foreground="{DynamicResource MahApps.Brushes.Accent}" Background="#252525"
                                          DropDownBackground="#252525" ShowStandardColors="False" ShowTabHeaders="False" ButtonStyle="{StaticResource ColorPickerButton}"
                                          SelectedColor="White" Margin="0 0 5 0" UsingAlphaChannel="False"/>

                            <Button Grid.Column="2" Height="Auto" Command="{Binding CopyColorCodeCommand}" CommandParameter="{Binding ElementName=HexColor2, Path=SelectedColor}">
                                <Button.Content>
                                    <DockPanel>
                                        <iconpacks:PackIconBoxIcons Kind="SolidColorFill" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                                        <Label Content="Copy Color" DockPanel.Dock="Right"/>
                                    </DockPanel>
                                </Button.Content>
                            </Button>

                            <xctk:DropDownButton Content="CHAT FILTERS" Grid.Column="3"
                                                         MaxDropDownHeight="384">
                                <xctk:DropDownButton.DropDownContent>
                                    <Grid Margin="2.5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <TextBlock Grid.Row="0" TextAlignment="Center" Text="WHAT YOU SELECT, WILL NOT BE REMOVED!" Margin="0 10 0 10"/>

                                        <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="1"
                                                          HorizontalScrollBarVisibility="Disabled">
                                            <ItemsControl ItemsSource="{Binding ParserSettings, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                              MaxWidth="512">

                                                <ItemsControl.Resources>
                                                    <Style TargetType="{x:Type mah:ToggleSwitch}">
                                                        <Setter Property="FontFamily" Value="Arial" />
                                                        <Setter Property="FontSize" Value="15" />
                                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                    </Style>
                                                </ItemsControl.Resources>

                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel IsItemsHost="True" Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>

                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <mah:ToggleSwitch Content="{Binding Name}"
                                                                          IsOn="{Binding Selected}"
                                                                          Margin="10 0 0 0">
                                                        </mah:ToggleSwitch>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </ScrollViewer>
                                    </Grid>
                                </xctk:DropDownButton.DropDownContent>
                            </xctk:DropDownButton>

                            <Button Content="Parse Chat" Grid.Column="4" Command="{Binding ParseChatCommand}"/>

                            <Label Content="Lines to Parse" Grid.Column="5"/>

                            <Grid Grid.Column="6" Margin="10" Width="384">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Slider Minimum="100" Maximum="1000" Interval="100"
                                    Value="{Binding TextSettings.ParseLines, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <Label Grid.Column="1" Content="{Binding TextSettings.ParseLines, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>

                            <Button Grid.Column="7" Command="{Binding CopyChatToClipboardCommand}" Content="Copy Chat to Clipboard"
                                IsEnabled="{qc:Binding '$P > 0', P={Binding SelectedBlock.ParsedChat.Length}}"/>
                        </Grid>
                    </ScrollViewer>

                    <xctk:RichTextBox  Grid.Row="1" x:Name="ParsedChatBig" FontSize="15"
                                       Text="{Binding SelectedBlock.ParsedChat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                       ScrollViewer.VerticalScrollBarVisibility="Visible"
                                       Block.LineHeight="{Binding LineHeight, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <xctk:RichTextBox.TextFormatter>
                            <xctk:PlainTextFormatter/>
                        </xctk:RichTextBox.TextFormatter>
                    </xctk:RichTextBox>
                </Grid>
            </TabItem>
            
            <TabItem Header="Cached Screenshots">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" FontSize="20" Content="Double click image to select it"/>

                    <ListView x:Name="ScreenCacheListView" ItemsSource="{Binding ScreenCache}"
                              MouseDoubleClick="ScreenCacheListView_OnMouseDoubleClick" Grid.Row="1">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding LoadCacheCommand}" CommandParameter="{Binding ElementName=ScreenCacheListView, Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="{Binding Guid}" Grid.Column="0" TextWrapping="WrapWithOverflow" MaxWidth="150" FontSize="20"/>

                                    <Label Content="{Binding ScreenshotDate}" Grid.Column="1" Foreground="White" FontSize="20"/>

                                    <Image Source="{Binding Bitmap, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" MaxHeight="128"/>

                                    <Button Content="Delete" Command="{Binding Command}" CommandParameter="{Binding}"
                                            Grid.Column="3"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</mah:MetroWindow>
