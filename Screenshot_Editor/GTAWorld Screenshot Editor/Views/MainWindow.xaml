<mah:MetroWindow x:Class="GTAWorld_Screenshot_Editor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GTAWorld_Screenshot_Editor"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconpacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:qc="http://QuickConverter.CodePlex.com/"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d" Loaded="MainWindow_OnLoaded"
        Title="GTAWorld Screenshot Editor" Height="720" Width="1280"
        Icon="../Resources/screenshot.ico"
        Drop="MainWindow_OnDrop" AllowDrop="True">
    <mah:MetroWindow.DataContext>
        <local:MainViewModel/>
    </mah:MetroWindow.DataContext>

    <Grid>
        <Image Source="../Resources/Logo.png"
               Height="{Binding ElementName=EditorHeader, Path=ActualHeight}"
               VerticalAlignment="Top" HorizontalAlignment="Right"
               Margin="2.5"/>

        <TabControl x:Name="MainTabControl">
            <TabItem x:Name="EditorHeader" Header="Editor">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="512"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <GroupBox Grid.Column="0">
                        <GroupBox.Header>
                            <Label Foreground="White">
                                CONTROLS
                            </Label>
                        </GroupBox.Header>

                        <GroupBox.Content>
                            <ScrollViewer x:Name="ControlsScrollViewer" HorizontalScrollBarVisibility="Disabled" 
                                          FlowDirection="RightToLeft">
                                <Grid FlowDirection="LeftToRight">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <Expander x:Name="InstructionsExpander" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                                              Expanded="ChatFilterExpander_OnExpanded" Collapsed="ChatFilterExpander_OnExpanded"
                                              Margin="0 0 0 10">
                                        <Expander.Header>
                                            <Label Foreground="White">
                                                USEAGE INSTRUCTIONS (CLICK HERE!)
                                            </Label>
                                        </Expander.Header>

                                        <StackPanel>

                                            <StackPanel.Resources>
                                                <Style TargetType="{x:Type TextBlock}"
                                                       BasedOn="{StaticResource MahApps.Styles.TextBlock}">
                                                    <Setter Property="FontFamily" Value="Arial" />
                                                    <Setter Property="FontSize" Value="15" />
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                    <Setter Property="Margin" Value="10 0 0 0"/>
                                                    <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                                                </Style>

                                                <Style TargetType="{x:Type BulletDecorator}">
                                                    <Setter Property="Margin" Value="0 0 0 10"/>
                                                </Style>
                                            </StackPanel.Resources>

                                            <BulletDecorator>
                                                <BulletDecorator.Bullet>
                                                    <Ellipse Height="10" Width="10" Fill="{DynamicResource MahApps.Brushes.Accent}"/>
                                                </BulletDecorator.Bullet>

                                                <TextBlock Text="To move parsed chat text over image, hold Shift and move your mouse over the image until you are satisfied with location, release Shift after."/>
                                            </BulletDecorator>

                                            <BulletDecorator>
                                                <BulletDecorator.Bullet>
                                                    <Ellipse Height="10" Width="10" Fill="{DynamicResource MahApps.Brushes.Accent}"/>
                                                </BulletDecorator.Bullet>

                                                <TextBlock Text="You can drag and drop a screenshot you want to edit, drop location does not matter as long as its anywhere on the app."/>
                                            </BulletDecorator>

                                            <BulletDecorator>
                                                <BulletDecorator.Bullet>
                                                    <Ellipse Height="10" Width="10" Fill="{DynamicResource MahApps.Brushes.Accent}"/>
                                                </BulletDecorator.Bullet>

                                                <TextBlock>
                                                    Custom line color: (#hex_color_code)line_text<LineBreak/>
                                                    Example: (#fff000)John Smith says: Blah.
                                                </TextBlock>
                                            </BulletDecorator>

                                            <BulletDecorator>
                                                <BulletDecorator.Bullet>
                                                    <Ellipse Height="10" Width="10" Fill="{DynamicResource MahApps.Brushes.Accent}"/>
                                                </BulletDecorator.Bullet>

                                                <TextBlock>
                                                    If you lack chat log, you can drag and drop image that has chat visible, click "READ IMAGE OCR", it will read visible chat off it.<LineBreak/>
                                                    Make sure to proof read text!<LineBreak/>
                                                    After that drag and drop image you want to use that has no chat visible.
                                                </TextBlock>
                                            </BulletDecorator>
                                        </StackPanel>

                                        <!--<TextBlock TextWrapping="WrapWithOverflow" FontSize="15"
                                                   Foreground="{DynamicResource MahApps.Brushes.Accent}" Margin="0 0 0 5">
                                            To move parsed chat text over image, hold Shift and move your mouse over the image until you are satisfied with location, release Shift after.
                                            <LineBreak/>
                                            <LineBreak/>
                                            You can drag and drop a screenshot you want to edit.
                                            <LineBreak/>
                                            <LineBreak/>
                                            Custom line color: (#hex_color_code)line_text<LineBreak/>
                                            Example: (#fff000)John Smith says: Blah.
                                            <LineBreak/>
                                            <LineBreak/>
                                            If you lack chat log, you can drag and drop image that has chat visible, click "READ IMAGE OCR", it will read visible chat off it.<LineBreak/>
                                            Make sure to proof read text!<LineBreak/>
                                            After that drag and drop image you want to use that has no chat visible.
                                        </TextBlock>-->
                                    </Expander>

                                    <Label Grid.Column="0" Grid.Row="1" Content="RageMP Folder"/>
                                    <Label Grid.Column="0" Grid.Row="2" Content="Selected Image"/>
                                    <Label Grid.Column="0" Grid.Row="3" Content="Image Resolution"/>
                                    <Label Grid.Column="0" Grid.Row="4" Content="Image Width" Visibility="{qc:Binding '$P ? Visibility.Visible : Visibility.Collapsed', P={Binding SelectedResolution.AllowEdit}}"/>
                                    <Label Grid.Column="0" Grid.Row="5" Content="Image Height" Visibility="{qc:Binding '$P ? Visibility.Visible : Visibility.Collapsed', P={Binding SelectedResolution.AllowEdit}}"/>
                                    <Label Grid.Column="0" Grid.Row="6" Content="Text Box Width"/>
                                    <Label Grid.Column="0" Grid.Row="7" Content="Font Family"/>
                                    <Label Grid.Column="0" Grid.Row="8" Content="Font Size"/>
                                    <Label Grid.Column="0" Grid.Row="9" Content="Font Weight (Thickness)"/>
                                    <Label Grid.Column="0" Grid.Row="10" Content="Stroke Thickness"/>
                                    <Label Grid.Column="0" Grid.Row="11" Content="Text Shadow Opacity"/>
                                    <Label Grid.Column="0" Grid.Row="13" Content="Pased Text:"/>

                                    <Grid Grid.Column="1" Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBox Grid.Column="0" Text="{Binding RageFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                        <Button Grid.Column="1" Margin="0" Width="32" Command="{Binding RageMPFolderCommand}">
                                            <Button.Content>
                                                <iconpacks:PackIconBoxIcons Kind="RegularFolder" VerticalContentAlignment="Center"/>
                                            </Button.Content>
                                        </Button>
                                    </Grid>

                                    <Grid Grid.Column="1" Grid.Row="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBox Grid.Column="0" Text="{Binding SelectedImage.Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                        <Button Grid.Column="1" Margin="0" Width="32" Command="{Binding SelectImageCommand}">
                                            <Button.Content>
                                                <iconpacks:PackIconBoxIcons Kind="RegularImage" VerticalAlignment="Center"/>
                                            </Button.Content>
                                        </Button>
                                    </Grid>

                                    <ComboBox Grid.Column="1" Grid.Row="3" ItemsSource="{Binding Resolutions}" DisplayMemberPath="Name"
                                          SelectedItem="{Binding SelectedResolution, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding ResizeImageCommandCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>

                                    <mah:NumericUpDown x:Name="ImageWidth" Grid.Column="1" Grid.Row="4"
                                                   IsEnabled="{Binding SelectedResolution.AllowEdit}"
                                                   Value="{Binding SelectedResolution.Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   Visibility="{qc:Binding '$P ? Visibility.Visible : Visibility.Collapsed', P={Binding SelectedResolution.AllowEdit}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="ValueChanged">
                                                <i:InvokeCommandAction Command="{Binding ResizeImageCommandCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </mah:NumericUpDown>

                                    <mah:NumericUpDown x:Name="ImageHeight" Grid.Column="1" Grid.Row="5"
                                                   IsEnabled="{Binding SelectedResolution.AllowEdit}"
                                                   Value="{Binding SelectedResolution.Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   Visibility="{qc:Binding '$P ? Visibility.Visible : Visibility.Collapsed', P={Binding SelectedResolution.AllowEdit}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="ValueChanged">
                                                <i:InvokeCommandAction Command="{Binding ResizeImageCommandCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </mah:NumericUpDown>

                                    <mah:NumericUpDown Grid.Column="1" Grid.Row="6"
                                                   Value="{Binding TextSettings.Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    </mah:NumericUpDown>

                                    <!--<ComboBox Grid.Column="1" Grid.Row="7"></ComboBox>-->
                                    <ComboBox x:Name="FontCombo" Grid.Column="1" Grid.Row="7" ItemsSource="{Binding Fonts}"
                                              FontSize="15"
                                              SelectedItem="{Binding TextSettings.FontFamily, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <Label FontFamily="{Binding}" Content="{Binding}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <mah:NumericUpDown Grid.Column="1" Grid.Row="8"
                                                   Value="{Binding TextSettings.FontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    </mah:NumericUpDown>

                                    <ComboBox x:Name="FontWeightCombo" Grid.Column="1" Grid.Row="9"
                                          SelectedValuePath="Tag"
                                          SelectedValue="{Binding TextSettings.FontWeight}">
                                        <ComboBox.Items>
                                            <ComboBoxItem Tag="100" Content="Thin" FontWeight="Thin"/>
                                            <ComboBoxItem Tag="200" Content="Extra-light (Ultra-light)" FontWeight="ExtraLight"/>
                                            <ComboBoxItem Tag="300" Content="Light" FontWeight="Light"/>
                                            <ComboBoxItem Tag="400" Content="Normal (Regular)" FontWeight="Normal"/>
                                            <ComboBoxItem Tag="500" Content="Medium" FontWeight="Medium"/>
                                            <ComboBoxItem Tag="600" Content="Semi-bold (Demi-bold)" FontWeight="SemiBold"/>
                                            <ComboBoxItem Tag="700" Content="Bold" FontWeight="Bold"/>
                                            <ComboBoxItem Tag="800" Content="Extra-bold (Ultra-bold)" FontWeight="ExtraBold"/>
                                            <ComboBoxItem Tag="900" Content="Black (Heavy)" FontWeight="Black"/>
                                        </ComboBox.Items>
                                    </ComboBox>

                                    <Grid Grid.Column="1" Grid.Row="10" Margin="0 10 0 10">

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Slider Minimum="0" Maximum="100" Interval="10"
                                                 Value="{Binding TextSettings.StrokeThickness, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                        <Label Grid.Column="1" Content="{Binding TextSettings.StrokeThickness, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                               ContentStringFormat=" {0:#0}%"/>

                                    </Grid>

                                    <Grid Grid.Column="1" Grid.Row="11" Margin="0 10 0 10">

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Slider Minimum="0" Maximum="100" Interval="10"
                                                Value="{Binding TextSettings.ShadowOpacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                        <Label Grid.Column="1" Content="{Binding TextSettings.ShadowOpacity, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                               ContentStringFormat=" {0:#0}%"/>

                                    </Grid>

                                    <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="12">
                                        <Button Content="Parse Chat from ragemp" Command="{Binding ParseChatCommand}"
                                                IsEnabled="{qc:Binding '$P != 0', P={Binding RageFolder.Length}}"/>

                                        <Expander x:Name="ChatFilterExpander" Expanded="ChatFilterExpander_OnExpanded" Collapsed="ChatFilterExpander_OnExpanded">
                                            <Expander.Header>
                                                <Label Foreground="White">
                                                    CHAT FILTER (What you select will be kept!)
                                                </Label>
                                            </Expander.Header>

                                            <Expander.Resources>
                                                <Style TargetType="{x:Type mah:ToggleSwitch}">
                                                    <Setter Property="FontFamily" Value="Arial"/>
                                                    <Setter Property="FontSize" Value="15"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                                                </Style>
                                            </Expander.Resources>

                                            <Expander.Content>
                                                <ItemsControl ItemsSource="{Binding ParserSettings, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel IsItemsHost="True" Orientation="Horizontal"/>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>

                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <mah:ToggleSwitch Content="{Binding Name}" IsOn="{Binding Selected}"
                                                                              Margin="10 0 0 0">
                                                            </mah:ToggleSwitch>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </Expander.Content>
                                        </Expander>

                                        <Button Content="Add / Refresh chat on image" Command="{Binding AddTextToImageCommand}"
                                                IsEnabled="{qc:Binding '$P > 0', P={Binding ParsedChat.Length}}"/>
                                    </StackPanel>

                                    <Grid Grid.Column="1" Grid.Row="13">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <xctk:ColorPicker x:Name="HexColor" Grid.Column="0"  ColorMode="ColorCanvas" Foreground="{DynamicResource MahApps.Brushes.Accent}" Background="#252525"
                                                           DropDownBackground="#252525" ShowStandardColors="False" ShowTabHeaders="False" ButtonStyle="{StaticResource ColorPickerButton}"
                                                           SelectedColor="White" Margin="0 0 5 0" UsingAlphaChannel="False"/>

                                        <Button Grid.Column="1" Height="Auto" Command="{Binding CopyColorCodeCommand}" CommandParameter="{Binding ElementName=HexColor, Path=SelectedColor}">
                                            <Button.Content>
                                                <DockPanel>
                                                    <iconpacks:PackIconBoxIcons Kind="SolidColorFill" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                                                    <Label Content="Copy Color" DockPanel.Dock="Right"/>
                                                </DockPanel>
                                            </Button.Content>
                                        </Button>
                                    </Grid>

                                    <xctk:RichTextBox x:Name="ParsedChatSmall" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="14"
                                                      FontSize="15"
                                                      Text="{Binding ParsedChat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                                                      Block.LineHeight="{Binding LineHeight, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                        <xctk:RichTextBox.TextFormatter>
                                            <xctk:PlainTextFormatter/>
                                        </xctk:RichTextBox.TextFormatter>
                                    </xctk:RichTextBox>
                                </Grid>
                            </ScrollViewer>
                        </GroupBox.Content>
                    </GroupBox>

                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0" Margin="0 0 0 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" FontSize="20" FontWeight="Bold" Content="{Binding ElementName=CanvasZoom, Path=Value}" ContentStringFormat="Canvas Zoom: {0:#0}%"/>

                            <Slider x:Name="CanvasZoom" Grid.Column="1" Minimum="10" Maximum="100" Interval="10" Margin="10 0 10 0"
                                    ValueChanged="CanvasZoom_OnValueChanged" Value="{Binding TextSettings.CanvasScale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>

                        <!--<ScrollViewer Grid.Row="1"
                                      VerticalScrollBarVisibility="Auto"
                                      HorizontalScrollBarVisibility="Auto">

                            

                        </ScrollViewer>-->

                        <Canvas x:Name="ScreenshotCanvas" Grid.Row="1"
                                MouseMove="ScreenshotCanvas_OnMouseMove"
                                HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10 0 0 0"
                                Height="{Binding SelectedResolution.Height}"
                                Width="{Binding SelectedResolution.Width}">

                            <Image Source="{Binding SelectedImage.Bitmap, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   Height="{Binding SelectedResolution.Height}"
                                   Width="{Binding SelectedResolution.Width}"/>

                            <ItemsControl x:Name="ScreenshotTextControl" ItemsSource="{Binding ScreenshotText}"
                                          MaxWidth="{Binding TextSettings.Width, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel IsItemsHost="True"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                        </Canvas>

                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Button x:Name="SaveLocally" Content="Save Locally" Click="SaveLocally_OnClick" FontSize="20"
                                    IsEnabled="{qc:Binding '$P > 0', P={Binding ScreenshotText.Count}}"/>

                            <Button x:Name="CopyClipboard" Grid.Column="1" Content="Copy to Clipboard" Click="SaveLocally_OnClick" FontSize="20"
                                    IsEnabled="{qc:Binding '$P > 0', P={Binding ScreenshotText.Count}}"/>

                            <Button Grid.Column="2" Content="RESET FIELDS" Command="{Binding ResetCommand}" FontSize="20"
                                    IsEnabled="{qc:Binding '$P > 0', P={Binding ScreenshotText.Count}}"/>

                            <Button Grid.Column="3" Content="READ IMAGE OCR" Command="{Binding ReadOcrCommand}" FontSize="20" IsEnabled="True"/>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem Header="Parsed Chat">
                <xctk:RichTextBox  x:Name="ParsedChatBig" FontSize="15"
                                   Text="{Binding ParsedChat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                   ScrollViewer.VerticalScrollBarVisibility="Visible"
                                   Block.LineHeight="{Binding LineHeight, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <xctk:RichTextBox.TextFormatter>
                        <xctk:PlainTextFormatter/>
                    </xctk:RichTextBox.TextFormatter>
                </xctk:RichTextBox>
            </TabItem>
            
            <TabItem Header="Cached Screenshots">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" FontSize="20" Content="Double click image to select it"/>

                    <ListView x:Name="ScreenCacheListView" ItemsSource="{Binding ScreenCache}"
                              MouseDoubleClick="ScreenCacheListView_OnMouseDoubleClick" Grid.Row="1">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding LoadCacheCommand}" CommandParameter="{Binding ElementName=ScreenCacheListView, Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="{Binding Guid}" Grid.Column="0" TextWrapping="WrapWithOverflow" MaxWidth="150" FontSize="20"/>

                                    <Label Content="{Binding ScreenshotDate}" Grid.Column="1" Foreground="White" FontSize="20"/>

                                    <Image Source="{Binding Bitmap}" Grid.Column="2" MaxHeight="128"/>

                                    <Button Content="Delete" Command="{Binding Command}" CommandParameter="{Binding}"
                                            Grid.Column="3"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</mah:MetroWindow>
