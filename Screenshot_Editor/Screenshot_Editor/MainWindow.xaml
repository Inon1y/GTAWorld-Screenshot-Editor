<mah:MetroWindow x:Class="Screenshot_Editor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Screenshot_Editor"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconpacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:qc="http://QuickConverter.CodePlex.com/"
        mc:Ignorable="d" SaveWindowPosition="True"
        WindowStartupLocation="CenterScreen" Loaded="MainWindow_OnLoaded"
        WindowState="Maximized"
        Title="Screenshot Editor - by Vash Baldeus" Height="720" Width="1280">
    <mah:MetroWindow.DataContext>
        <local:MainViewModel/>
    </mah:MetroWindow.DataContext>

    <mah:MetroWindow.Resources>
        <local:CustomSizeConverter x:Key="CustomSizeConverter"/>
    </mah:MetroWindow.Resources>

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <StackPanel Orientation="Horizontal">
                <iconpacks:PackIconEvaIcons Kind="ColorPaletteOutline" VerticalAlignment="Center"/>

                <ComboBox x:Name="CmbAccent" ItemsSource="{Binding Accents}"
                          SelectedItem="{Binding SelectedAccent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Width="96" FontSize="15" Background="Transparent" BorderThickness="0"
                          SelectionChanged="CmbAccent_OnSelectionChanged">
                    <ComboBox.ToolTip>
                        Change theme accent color
                    </ComboBox.ToolTip>
                </ComboBox>
            </StackPanel>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="512"/>
            <ColumnDefinition Width="*" x:Name="CanvasColumn"/>
        </Grid.ColumnDefinitions>

        <GroupBox Grid.Column="0" Header="Controls" Margin="10">
            <GroupBox.Content>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Text="To move text over image, hold Shift and move mouse over image, release Shift once found suitable location."
                                   TextWrapping="Wrap" FontSize="15"/>

                        <Button x:Name="SelectImageBtn" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1"
                                Click="SelectImageBtn_OnClick" Content="Select image"/>

                        <Label Grid.Column="0" Grid.Row="2" Content="Font Size"/>
                        <Label Grid.Column="0" Grid.Row="3" Content="Font Family"/>
                        <Label Grid.Column="0" Grid.Row="4" Content="Resolution Preset"/>
                        <Label Grid.Column="0" Grid.Row="5" Content="Res. Width"/>
                        <Label Grid.Column="0" Grid.Row="6" Content="Res. Height"/>
                        <Label Grid.Column="0" Grid.Row="7" Content="Font Weight"/>
                        <Label Grid.Column="0" Grid.Row="8" Content="Text Box Width"/>
                        <Label Grid.Column="0" Grid.Row="9" Content="Stroke Width (decimal range 0.1~1)"/>

                        <mah:NumericUpDown x:Name="FontSizeUpDown" Grid.Column="1" Grid.Row="2" Minimum="6" Maximum="100" Value="20" FontSize="15"/>

                        <ComboBox x:Name="FontCombo" Grid.Column="1" Grid.Row="3" ItemsSource="{Binding FontsList}"
                                  FontSize="15"
                                  SelectedItem="{Binding SelectedFont, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Label FontFamily="{Binding}" Content="{Binding}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <ComboBox x:Name="CanvasSizeCombo" Grid.Column="1" Grid.Row="4" ItemsSource="{Binding Sizes}"
                                  SelectedItem="{Binding XY}" DisplayMemberPath="Size" FontSize="15"
                                  SelectionChanged="CanvasSizeCombo_OnSelectionChanged">
                        </ComboBox>

                        <mah:NumericUpDown x:Name="WidthRes" Grid.Column="1" Grid.Row="5" Value="{Binding XY.X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="15"
                                           IsEnabled="{Binding XY.Size, Converter={StaticResource CustomSizeConverter}}"
                                           ValueChanged="NumericUpDown_OnValueChanged"/>

                        <mah:NumericUpDown x:Name="HeightRes" Grid.Column="1" Grid.Row="6" Value="{Binding XY.Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="15"
                                           IsEnabled="{Binding XY.Size, Converter={StaticResource CustomSizeConverter}}"
                                           ValueChanged="NumericUpDown_OnValueChanged"/>

                        <ComboBox x:Name="FontWeightCombo" Grid.Column="1" Grid.Row="7" FontFamily="Arial"
                                  SelectedValuePath="Tag" FontSize="15">
                            <ComboBox.Items>
                                <ComboBoxItem Tag="100" Content="Thin" FontWeight="Thin"/>
                                <ComboBoxItem Tag="200" Content="Extra-light (Ultra-light)" FontWeight="ExtraLight"/>
                                <ComboBoxItem Tag="300" Content="Light" FontWeight="Light"/>
                                <ComboBoxItem Tag="400" Content="Normal (Regular)" FontWeight="Normal"/>
                                <ComboBoxItem Tag="500" Content="Medium" FontWeight="Medium"/>
                                <ComboBoxItem Tag="600" Content="Semi-bold (Demi-bold)" FontWeight="SemiBold"/>
                                <ComboBoxItem Tag="700" Content="Bold" FontWeight="Bold"/>
                                <ComboBoxItem Tag="800" Content="Extra-bold (Ultra-bold)" FontWeight="ExtraBold"/>
                                <ComboBoxItem Tag="900" Content="Black (Heavy)" FontWeight="Black"/>
                            </ComboBox.Items>
                        </ComboBox>

                        <mah:NumericUpDown x:Name="TextBlockWidthNumber" Grid.Column="1" Grid.Row="8" FontSize="15" Minimum="500"/>
                        <mah:NumericUpDown x:Name="TextStrokeWidth" Grid.Column="1" Grid.Row="9" FontSize="15" Minimum="0.1" Maximum="1"/>
                    </Grid>

                    <Button x:Name="ConvertTxtBtn" Grid.Row="1" Content="Process Text on to Image"
                            Click="ConvertTxtBtn_OnClick"
                            IsEnabled="{qc:Binding '$P != 0', P={Binding ElementName=InputTxtBox, Path=Text.Length}}"/>

                    <Button x:Name="SaveImageBtn" Grid.Row="2" Content="Save Image"
                            Click="SaveImageBtn_OnClick"
                            IsEnabled="{qc:Binding '$P != 0', P={Binding ElementName=InputTxtBox, Path=Text.Length}}"/>

                    <Label Grid.Row="3" Content="IC Chat Text:"/>

                    <xctk:RichTextBox x:Name="InputTxtBox" Grid.Row="4" FontSize="15">
                        <xctk:RichTextBox.TextFormatter>
                            <xctk:PlainTextFormatter />
                        </xctk:RichTextBox.TextFormatter>
                    </xctk:RichTextBox>
                </Grid>
            </GroupBox.Content>
        </GroupBox>

        <ScrollViewer Grid.Column="1"
                VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <Canvas x:Name="ScreenShotCanvas" Background="Black" MouseMove="ScreenShotCanvas_OnMouseMove"
                    Height="{Binding XY.Y, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Width="{Binding XY.X, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <Image x:Name="ScreenImage" Stretch="UniformToFill"
                       Source="{Binding Image, UpdateSourceTrigger=PropertyChanged}"
                       Height="{Binding XY.Y}" Width="{Binding XY.X}"/>

                <StackPanel x:Name="TxtBlock"
                            MaxWidth="{Binding ElementName=TextBlockWidthNumber, Path=Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            MaxHeight="{Binding XY.Y, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                <!--<Border x:Name="TxtBlockBorder">
                    <Border.Background>
                        <SolidColorBrush Color="Black" Opacity="{Binding TextBackgroundOpacity, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Border.Background>

                    --><!--<TextBlock x:Name="TxtBlock" FontWeight="Bold" Margin="10"
                               FontFamily="{Binding SelectedFont, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                               FontSize="{Binding ElementName=FontSizeUpDown, Path=Value}"
                               TextWrapping="WrapWithOverflow"
                               MaxWidth="{Binding XY.X, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                               MaxHeight="{Binding XY.Y, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                               VerticalAlignment="Center">
                               -->
                    <!--TextAlignment="{qc:Binding '$P ? Right : Left', P={Binding ElementName=FlowDirectionSwitch, Path=IsOn}}">-->
                    <!--<TextBlock.Background>
                            <SolidColorBrush Color="Black" Opacity="0.5" />
                        </TextBlock.Background>-->
                    <!--
                    </TextBlock>--><!--

                    

                </Border>-->
            </Canvas>
        </ScrollViewer>

    </Grid>
</mah:MetroWindow>
